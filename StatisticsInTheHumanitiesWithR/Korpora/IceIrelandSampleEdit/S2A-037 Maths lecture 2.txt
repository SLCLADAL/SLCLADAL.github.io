<S2A-037 Maths lecture 2>  Each colour is an index register  That 's what that 's what I 'm saying  I 've underlined the words there to sort of say that  Now colouring of the graph corresponds to assigning index registers to storage periods  Okay now why is that true  Why is that what we want  basically we we 're going to colour this graph  We 'll talk about that in a second  That 's uh easy to do because the graph is so simple  We 'll colour the graph in a minute and then different colours okay  two adjacent nodes must have two different colours  Now what that means is they must be assigned to different index registers and that 's exactly the way you want it  because if two nodes are joined by an edge  that means they are needed at the same time in the programme and that means they should not be assigned to the same index register  They should not have the same colour  So colouring as we 've known it up to now ensures that different nodes which are adjacent end up in different index registers  So our colour is an index register in this case  Now this is often a point of difficulty in colouring problems uhm in the sense of trying to spot what 's the connection between the colour and the solution of the problem but in this case the colours are the index registers  Now the actual colouring of this graph this is a very simple one we 've done much harder ones  If you try to colour it using two colours you 'll find you can't do it  because if you start say with colour one here uh this has to be two  this has to be one  this has to be two  this has to be one  and now you 've got a problem  This is one and this is one as well  So it didn't work with two colours  You 're forced to put in a third colour somewhere along the way  uhm to do it  So I want to just say it 's easy to see that in fact three colours are needed  And that 's the minimum  The chromatic number is three  You need three colours  plus you cannot do it uhm  uh you can do it with three colours and you cannot do it with fewer  Let me put it that way  So three registers will be needed  Now that is a little bit surprising given the fact that I  what I pointed out earlier  that uhm  at any given moment in this running of this loop you never need more than two variables at a time  So you might think therefore two uh two places to store them should do the job  But you sit down and try to do it and you 'll basically end up with the same problem I ended up a moment with ago with  when I went round here trying to colour this using two colours  I ended up getting trapped at the end  If you try doing the same thing uhm with storing the variables in two registers as you go  forget about graph theory  you will find that two registers just don't work  You will need a third one  You 'll get trapped otherwise  Well suppose one has made a colouring of this with three colours  uhm I haven't done it but anyway  this would be a typical sort of answer you finish up with  So I 'll just draw one means colour one in this case so I 'll just draw two is colour two or just uh three is colour three  And that 's just one possible solution and there are many possible solutions  Okay  th  that now is a difficult enough problem because of the amount of technical jargon that 's thrown in there so  uhm if there  are there any questions on it  I 'd be happy to answer them  Okay let 's let 's just leave that  My main purpose for doing that as you see the graph was quite simple  was on the one hand to do  to do something that uhm  you know  that was an applied problem in some sense and translate it to a graph  and the second was to sort of nod towards computer science to  well perhaps entertain the computer science people here although you may not have liked being entertained  let 's go onto something else  more more mathematical this time  we 're still at colouring  Now what we 've done so far is okay we 've learned what the chromatic number is  We 've done some we 've found the chromatic number of certain graphs by just analysing them basically  We had a couple of rules which helped us along but we did need some thinking as well  Now in practice if you have a large and complicated graph you very often will not be able to or will not want to find out the chromatic number  It 's just too complicated a problem to colour the graph with with great effort using the minimum number of colours because it is in general a hard problem  What you would often  be inclined to do is to settle for something a little less which is a lot less painful  Instead of making a great effort and using exactly the minimum number of colours to colour a graph you might make a very feeble effort and use slightly more than the minimum number of colours to colour the graph  In terms of this example of putting animals in cages in the zoo what it means is that maybe in theory the minimum number of cages you need in your zoo is seventeen  but maybe it it just takes a lot of thought and planning to to arrange the animals just so  so that seventeen cages work  Maybe with very little effort you could stuff all the animals into nineteen cages  and for many people many situations often this is a good deal  You just do something simple and easy to do and you end up with an answer which may not be an optimal answer  the best possible  but is usually very close to it  and this is what 's called the Welsh Pole Colouring algorithm  This is an easy algorithm  It 's it 's quite simple to use  Okay so some  some notation before I describe it  S throughout the algorithm will be the set of uncoloured nodes of our graph  S is the set of uncoloured nodes of the graph G and as usual G is a set of vertices  a set of edges  Now to begin with  S is the set of all nodes  no nodes are coloured to begin with  So to begin with S equals V  and then as the algorithm proceeds S gradually shrinks until eventually S becomes the empty set  and in other words we 've coloured the entire graph  We 'll keep  the way it works is we  instead of colouring this node one then that node two then this node three or so on  what we do is we take one colour in our hand  colour number one  we colour certain nodes on the graph  we throw that colour away  We then take colour number two  we colour certain nodes on the graph  throw that away  So at each stage I want to keep track of what colour we are presently using  So I throughout would be the colour counter  It 's the colour that we 're using at any given stage in the graph  Okay step one is just initialising everything  So step one  we set S equal to V  So initially all nodes are uncoloured  that 's all I 'm saying  and we start with colour number one  As I 've said before we we don't talk about colours like red green blue et-cetera  We could  but it 's simpler to just talk about them as colours number one two three  So we start with colour number one  Now step two is the hardest step in the algorithm and having said that  as you 'll see it 's a very easy step  Step two  list the nodes of S in order of decreasing degree  So you list  ha  you have to calculate the degree of every node  we know that 's very easy  And then you make a list of the nodes  wh  where the nodes of highest degree come at the top of the list  the nodes of  of lowest degree come at the bottom of the list  Now in a typical example this list there 's more than one way of doing this  I mean for example  if you had a graph all of whose nodes were degree three then you could list the nodes in any order you like and it 's all the same because they all have the same they all have the same degree  So in general  there there 's more than one way of doing the list and it and it doesn't matter which way you do it  there 's no agonising over this particular step  You just put nodes of degree say say five is the highest degree of any node  you put the nodes of degree five at the top of the list then the nodes of degree four then the nodes of degree three then two then one then zero if there 's any of zero  now the colouring then is  you start by colouring the very first node on your list  Step three  assign colour I  that 's the the the current colour  the present colour  And the first time through this we 'll work with colour number one  Assign colour I to the first node on the list  So you colour your first node on the list with colour I your current colour  And then you simply go down through the list once  colouring every node as you go that you are legally allowed to colour  In other words that is not adjacent to a node that you 've already coloured with the same colour  So you go once down through the list  You colour the first node for sure because that colour hasn't appeared on the graph yet so you can colour that with impunity  Then the second node may or may not be colourable with the same colour  If it is  if it 's not because it 's adjacent to the first ignore it and go on to the third  You just go down once through the list colouring nodes as you go as many as you can  Then in sequence  to each so  continuing on there  assign colour I to the first node and then assign colour I in sequence to each node on the list  which isn't adjacent to one already coloured with I  Then in sequence to each node on the list not adjacent to one already coloured with I  Now if that 's clear well and good  if if it 's not quite clear I 'll do an example in a second it 'll be very clear I think  Tha  there 's more description of the algorithm coming but it 's it 's very small  very minor  uhm the algorithm basically consists of going through steps two and three again and again  And in fact step two as we 'll see you  in a sense you only do it once  Step three is the one where you do the colouring but it 's an easy step  So if we can just roll on here  Step four  you 've used up colour I now in step three  You 've coloured as many nodes as you can  loosely speaking  In step four you move on to the next colour  I becomes I plus one  So if I was one you now change I to two  If I was two you now change it to three  So step four we 're just updating I  Step five is we  I suppose I could have put these two steps together  Step five is you update S  S was the set of all colour  all uncoloured nodes  which we just coloured a few of them  So you update S by removing from S the ones you 've just coloured  That 's all  So the new S is equal to the old S less the nodes that you coloured in step three  So all it means is you have a list of uncoloured nodes and you delete the nodes from that list as you colour them  That 's all I 'm saying  Now you keep on doing this uhm well in the following sense  until the graph is completely coloured  Step six  if S is equal to five  If S is the empty set  you stop  you 've coloured  S is the set of uncoloured nodes  if that set is empty then  in other words you 've coloured everything so you stop  If S is the empty set stop  and if not  you go back to step two  Step two is where you start colouring again  I 'm sorry it 's where you list the nodes in order then start colouring  Okay  uhm before I do an example with the algorithm  The algorithm takes longer to describe than to do okay but there 's a  believe me it 's an easy algorithm  Uhm let me just mention what the algorithm does for you and what it doesn't do for you  Note that this algorithm may use more colours than necessary  The algorithm may use more colours than necessary  It 's it 's not  the algorithm in other words is not guaranteed to use the minimum number of colours  It may use more  So for example  if it uses five colours  if it uses say five colours  well what conclusion can one draw from this  You can only conclude from this  well if the algorithm uses five colours that tells you obviously that the graph is five-colourable  five colours work  But it does not tell you  for example that four colours wouldn't work  It 's possible the algorithm has been a little bit uneconomical in its use of colours  Maybe it 's used five when four actually worked  So you cannot conclude from this that the chromatic number is five that the minimum number is five  You can only conclude the chromatic number is less than or equal to five  It 's possible that a fewer number of colours would work  The algorithm tells you nothing about this   You can only conclude from this that the chromatic number is less than or equal to five  You cannot  you cannot conclude that the chromatic number is equal to five  Now beware of this  this sort  this algorithm crops up frequently enough on the summer exam and people are forever doing this to me that they do the algorithm correctly  They use say five colours and then they write down happily therefore the chromatic number is five  That 's not true  All you can conclude is that the chromatic number is at most five  It might be smaller  You might be able to get away with a fewer number of colours  a smaller number of colours 