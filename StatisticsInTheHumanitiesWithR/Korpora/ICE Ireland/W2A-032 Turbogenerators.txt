<W2A-032 Turbogenerators><I><W2A-032$A><W2A-032$B><W2A-032$C><W2A-032$D><h> <#> <bold> PARALLEL ADAPTIVE CONTROL FOR A TURBOGENERATOR SYSTEM </bold> </h><h> <bold> <#> M.D. Brown, G.W. Irwin, E. Swidenbank and B.W. Hogg </bold><it> <#> Department of Electrical and Electronic Engineering, The Queen's University of Belfast, Stranmillis Road, Belfast BT9 5AH, UK </it> </h><p> <bold> <#> Abstract. </bold> <#> This paper describes the design and implementation of digital self-tuning controllers for turbogenerator automatic voltage regulator (AVR) and governor systems. <#> Practical aspects such as controller robustness, lack of sufficient processing power, and algorithm mapping issues are discussed. <#> A parallel architecture using Inmos transputers combined with and advanced VME bus-based measurement system provides a solution to these problems and offers the control systems designer the opportunity to implement complex parallel algorithms within the specified 10 ms industrial standard. <#> Test results on a laboratory microalternator, involving both SISO and MIMO self-tuning regulators, are presented and compared with fixed-gain AVRs. </p><p> <#> Key Words. <#> Transputers; power system control; turbogenerators; parallel processing; adaptive control </p><h> <#> 1. INTRODUCTION </h><p> <#> The need for improved control of electricity generation equipment has been steadily increasing. <#> Modern generating sets tend to be less stable than their predecessors, and therefore demand complex control systems for their successful operation. <#> Control equipment manufacturers have recognised this and have developed computer-based systems. <#> Digital governors have been in existence for some time now, and digital voltage regulators are available (Ham, 1989). </p><p> <#> Self-tuning and adaptive control can offer advantages over conventional control (Wu and Hogg, 1988). <#> Simulation studies have proven the theoretical possibility of improving control performance, but implementation problems have hampered advancement on real systems. <#> A major difficulty is the lack of processing power available from conventional microprocessors. <#> While some success has been achieved with specialised devices such as Digital Signal Processors (Gurubasavaraj, 1989), the underlying architecture is suitable only for a limited number of applications. <#> Alternative control architectures are therefore being developed, and one promising scheme involves the use of parallel processing with Inmos transputers. </p><p> <#> The transputer is a general-purpose, single-chip highspeed microprocessor, which is a member of the MIMD (multiple-instruction, multiple-data) class of parallel architectures (Flynn, 1966). <#> The T800 architecture combines a 32-bit, 10 MIPS RISC processor with an on-board 64-bit floating point unit, memory and communications. <#> The key technical feature, which distinguishes the transputer from other high-performance microprocessors, is the addition of four high-speed, duplex links. <#> These allow a single transputer to be used as a node among any number of similar devices to form a parallel processing system. <#> Control engineers view the transputer as a powerful processing element capable of easy implementation in an embedded parallel processing system, and an increasing number of successful applications are being reported (Irwin and Fleming, 1992). </p><p> <#> Increased computational speed is of course the primary benefit of parallel processing, allowing faster systems to be controlled and giving the control engineer the choise of added complexity in the control algorithm. <#> Easy expansion, within a uniform hardware and software base, is another advantage, since it is possible to add more processors as required. <#> This implies reduced development and maintenance costs in real-time computer control applications. </p><p> <#> This paper reports on transputer-based parallel adaptive control of a laboratory turboalternator, and describes how the hardware and software system developed achieves the specified real-time performance. <#> Algorithm mapping issues are also discussed with respect to parallel implementation of SISO and MIMO self-tuning controllers. <#> The hardware system includes the industry standard VME bus architecture and employs Intel 8751, Motorola 68020 and Inmos transputer systems to perform various tasks in a pipelined structure. </p><p> <#> Initial tests were performed on a realistic and proven simulation of a three-phase turboalternator running in parallel with both the measurement and control algorithms on a network of T800 transputers (Brown and Swidenbank, 1991). <#> Building on this work, a comprehensive set of new results for both SISO and MIMO self-tuning regulators are presented here. <#> These include real-time tests carried out on a scaled laboratory turbogenerator under SISO, multiloop and multivariable concurrent control. <#> These confirm the improved performance advantages of using parallel adaptive control. </p><p> <#> The paper makes an original contribution in two directions. <#> The work reported constitutes a practical real-time control application of parallel processing, since the adaptive controller algorithm is realised on a processor array thus enabling the benefits of this significant new technology to be assessed in a field of industrial significance. <#> Secondly, the adaptive control results from the laboratory micromachine are noteworthy, since technological limitations have previously mitigated against implementation of these advanced controllers at the sort of sample rates required by power system equipment manufacturers. <#> Thus, the graphs given in section 5 allow adaptive controllers to be assessed against fixed-gain control and, significantly, illustrate the potential benefits of moving from SISO adaptive control to the considerably more complex multivariable strategy. </p><h> <#> 2. SELF-TUNING CONTROL </h><h> <#> <it> 2.1 SISO Control Strategy </it> </h><p> <#> A minimum-variance, self-tuning regulator (STR) with an auxiliary predictor is applied to the synchronous generator excitation loop, replacing conventional automatic voltage regulation (Wu and Hogg, 1988) as shown in Fig. 1. </p><&> graph inserted </&><p> <#> The outputs and inputs of the controlled system are : <&> equation inserted </&> where V <sb> t </sb> (t) is the terminal voltage at time t, w is the speed in rad s <sp> -1 </sp>, V <sb> r </sb> (t) is the input to the exciter, and <*> delta sign </*> represents deviation from steady-state. </p><p> <#> In the SISO case, the generator can be described as : <&> equation inserted </&> where y(k) and u(k) are the output and input of the system at the sample instant k. <#> A, B, and C are polynomials in the backward shift operator q <sp> -1 </sp> and <*> sign </*> (k) is an uncorrelated random sequence of zero mean disturbing the system. </p><p> <#> Rewriting the equation in predictor form leads to the following general control law, </p><&> equation inserted </&><p> <#> The parameters of the polynomials F, G and C are determined by Extended Recursive Least Squares (ERLS). <#> If the orders of the polynomials are taken as 3, and if the first parameter, g0, of G is fixed, then there are 8 parameters to be estimated. <#> R is a constant which determines the weight placed on the control signal in the generalised minimum-variance derivation (Wu and Hogg, 1988). </p><p> <#> With the order of C chosen to be zero, the control reduces to equation.<&> equation inserted </&> </p><p> <#> The parameters of the polynomials F and G are now obtained using Ordinary Recursive Least Squares (RLS) and there are 5 parameters to be estimated. </p><h> <#> 2.2 <it> MIMO Control Strategies </it> </h><p> <#> Two approaches may be adopted when considering turbogenerator AVR and governing systems. <#> One employs a separate self-tuner for both the governor and AVR and is referred to as "multi-loop control". <#> The other method integrates both the governor and AVR systems into a single multivariable controller. <#> Figs 2 and 3 illustrate these two procedures. </p><p> <#> In the multi-loop case, the governor and AVR control laws are the same as for the SISO system. <#> The multivariable controller has the same form as the SISO algorithm, except that the associated vectors are replaced by matrices, and multivariable least squares is used to estimate the system parameters. <#> Although the multi-loop system is easier to design and requires much less computation time to implement, it is expected that the multivariable controller will better exploit the inherent coupling in the turbogenerator system (Ibrahim <it> et al </it> , 1989). </p><h> <#> 2.3. <it> Supervision Scheme </it> </h><p> <#> Previous work has shown that self-tuning regulators will work well if the preconditions for stability and convergence are satisfied (Wu and Hogg, 1988). <#> The non-linear nature of power systems means that the linear model is only valid for a small region about a given operating point. <#> Any deviation form this region will cause the estimator to work outside the linear range and the resulting model will therefore be invalid. </p><&> diagrams inserted </&><p> <#> Various methods have been developed to ensure satisfactory operation of adaptive controllers, which usually take the form of protection algorithms for the parameter estimator. <#> In this work, a number of methods were combined for this purpose, including offset rejection, modification of the RSL algorithm to deal with time-varying systems, moving boundaries for the estimated parameters, and switching the estimator on and off during transient conditions (Wu and Hogg, 1988 ; Brown and Swidenbank, 1991). </p><h> <#> 3. LABORATORY SYSTEM </h><h> <#> 3.1 <it> Micromachine </it> System </h><p> <#> The micromachine system consists of a small synchronous generator with an associated turbine simulator, connected to the laboratory busbar through a transformer and artificial transmission line. <#> The synchronous generator is a 3 kVA, 220 V, 50 Hz, 1500 rpm 4-pole microalternator, whose parameters have been specifically designed to match those of a full-size generator. <#> The alternator is driven by a separately excited d.c. motor, whose field current is kept constant. <#> The torque supplied by the motor is therefore directly proportional to its armature current, being controlled by an analogue turbine simulation. <#> The simulation represents a 3-stage steam turbine with reheater. <#> The micromachine constitutes a two-rotating mass model of the shaft dynamics, whereas a full-scale system may have six rotating masses. </p><p> <#> Although a laboratory machine cannot be realistically expected to give results that precisely match those obtainable in a full-scale power station, it does provide a means of verifying the behaviour of controllers which have proved to be successful in simulation. <#> As well as allowing a particular control system to be tested under real-time constraints, the micromachine provides a more stringent testing environment, incorporating many features not possible with a computer simulation. <#> Effects such as non-ideal transducer characteristics leading to limited resolution and noise, saturation and other non-linearities present on the real machine, computational delays and variations in busbar voltage and frequency, all contribute to the problems that any controller will face in a practical situation. </p><h> <#> 3.2 <it> Fourier Measurement Algorithm </it> </h><p> <#> Conventional methods for determining machine terminal quantities like voltage and power rely on rectification and summation of the individual phase quantities to form an average RMS value. <#> Since the voltage and current waveforms generated by a synchronous machine are rarely perfectly balanced, and are invariably contaminated by harmonics and noise, these traditional methods often produce poor representations of the true terminal quantities, especially during transient periods. <#> Inaccurate measurement of feedback variables inevitably leads to a degradation in control performance and often means that the expected performance benefits from more advanced controllers do not accrue. </p><p> <#> One method which can be used to extract the fundamental components from complex periodic waveforms, such as those produced by a synchronous generator, is based on a finite Fourier series. <#> Fundamental waveform components derived using this method can be combined to produce accurate measurements of terminal quantities under both symmetrical and unsymmetrical transient and steadystate conditions (Brown and Swidenbank, 1991). </p><h> <#> 3.3 <it> VME Hardware System </it> </h><p> <#> In order to advance the theoretical work and to create a structurally open-ended environment, a VME busbased system was chosen as the host hardware for the implementation of both the control and measurement algorithms. <#> This standard bus system is already being used by power systems control manufacturers, and is well established in many industries. </p><p> <#> Voltage and current transformers are attached directly to the outputs from the microalternator. <#> Signals from these devices are passed through anti-aliasing low-pass filters on a custom designed board and then on to the analogue i/o board. <#> An 8751 microcontroller generates an interrupt signal at 12 times the system frequency (600 Hz). <#> This interrupt triggers the master 68020 board to read in samples of the filtered electrical waveforms from the analogue i/o board and to read in the values of speed and rotor angle calculated by the 8751. <#> On completion of the read sequence, the raw values are then passed to shared DMA (Direct Memory Access) memory to be picked up by the IMS BO11 T 800 transputer. <#> The transputer then performs the Fourier measurement algorithm to produce the electrical terminal quantities. </p><&> equation inserted </&><h> <#> 3.4 <it> Multi-task Architecture </it> </h><p> <#> The configuration of the hardware and software systems needed to implement the various controllers follow closely that described above for the measurement system. <#> An extra task is required in this instance, however, to look after the control output to the generator excitation and governoring systems. <#> This takes the form of a simple program which convents the per unit output excitation and governor signals from a particular controller into suitably scaled values and then writes them to the digital-to-analogue converters on the analogue input-output board. </p><p> <#> This program must run on the VME transputer since the D/A converters are accessed through DMA memory on the VME bus. <#> The program therefore executes in parallel with the Fourier measurement program. <#> The control algorithm runs on the PC based TRAM (transputer module) and communicates with the measurement program and the digital-to-analogue conversion program via an Inmos link wire. </p><p> <#> The entire process can be visualised in Fig. 5. </p><&> equation inserted </&><p> <#> As can be seen, both the Fourier measurement algorithm and the digital-to-analogue conversion routine run on the same transputer. <#> The processor must therefore schedule cpu time between the two programs. <#> This does not cause any conflict or affect the synchronism of the measurement system since the D/A conversion program takes only a negligible time to execute when compared to the computationally complex Fourier algorithm. </p></I>