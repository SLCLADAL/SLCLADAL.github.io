### Workspace löschen
rm(list=ls(all=T))

### Daten laden
cluster<-read.table(choose.files(), header=T, sep="\t", comment.char="", quote="")

### Daten anzeigen
attach(cluster); str(cluster); summary(cluster)

### NAs entfernen (falls vorhanden)
cluster <- na.omit(cluster)

### notwendiges Paket laden
library(amap)

### Clusterbares Objekt erzeugen
cluster.t <- t(cluster)

### Distanzmatrix erstellen
### Dist(cluster.t, method = "euclidean", diag = T, upper = T)
### Dist(cluster.t, method = "manhattan", diag = T,?upper = T)
### 1-Dist(cluster.t, method = "correlation", diag = T, upper = T)
### 1-Dist(cluster.t, method = "pearson", diag = T, upper = T)
dist.matrix<-Dist(cluster.t, method = "correlation", diag = T, upper = T)

### Zahlen in der Distanzmatrix auf 4 Nachkommastellen runden
round(dist.matrix, 4)

### Clusterobjekt erzeugen
clust.ana <- hclust(dist.matrix, method = "ward")

### Clusterobjekt anzeigen
plot(clust.ana)

### 2 rote Boxen um Cluster erzeigen 
rect.hclust(clust.ana, 2) #red boxes around clusters


############################################################################
############################################################################

###Alternative Clusteranalyse mit AU/BP values (quasi p-values)

### Workspace löschen
rm(list=ls(all=T))

### Daten laden
cluster<-read.table(choose.files(), header=T, sep="\t", comment.char="", quote="")

### Daten anzeigen
attach(cluster); str(cluster); summary(cluster)

### notwendiges Paket laden
library(pvclust)

###Erzeuge Clusterobjekt
fit <- pvclust(cluster, method.hclust = "ward", method.dist = "euclidean")

###Clusteranalyse mir anderem Amalgamationsmaß (complete)
###fit <- pvclust(cluster, method.hclust="complete", method.dist="euclidean")

###Clusteranalyse mir anderem Amalgamationsmaß (single)
###fit <- pvclust(cluster, method.hclust="single", method.dist="euclidean")

###Clusterobjekt anzeigen
plot(fit)

### Boxen um signifikant ähnliche Cluster erzeigen
pvrect(fit, alpha=.95)




############################################################################
############################################################################

###Alternative Clusteranalyse: K-means non-hierarchical Clusteranalysis

### Workspace löschen
rm(list=ls(all=T))

### Daten laden
cluster<-read.table(choose.files(), header=T, sep="\t", comment.char="", quote="")

### Daten anzeigen
attach(cluster); str(cluster); summary(cluster)

###Erzeuge Clusterobjekt
fit <- KMeans(model.matrix(~-1 + Feature1 + Feature2 + Feature3 + 
  Feature4 + Feature5, cluster), centers = 2, iter.max = 10, num.seeds = 10)

### Cluster Sizes
fit$size 

### Cluster Centroids
fit$centers 

### Within Cluster Sum of Squares
fit$withinss 

### Total Within Sum of Squares
fit$tot.withinss 

### Between Cluster Sum of Squares
fit$betweenss 

###Clusterobjekt anzeigen
biplot(princomp(model.matrix(~-1 + Feature1 + Feature2 + Feature3 + Feature4 + Feature5, cluster)), xlabs = as.character(fit$cluster))
